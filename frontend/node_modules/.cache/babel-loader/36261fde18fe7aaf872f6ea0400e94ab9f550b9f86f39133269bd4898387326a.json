{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emuld\\\\OneDrive\\\\Desktop\\\\React\\\\Calendar\\\\frontend\\\\src\\\\components\\\\Event.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Event({\n  id,\n  title,\n  date,\n  isChecked,\n  handleCheckClick\n}) {\n  _s();\n  const textareaRef = useRef(null); // Ref for accessing the textarea element\n\n  // Adjust textarea height based on content\n  useEffect(() => {\n    if (textareaRef.current) {\n      // Reset the height to 'auto' before adjusting\n      textareaRef.current.style.height = \"auto\";\n      // Set the height to scrollHeight to auto-resize\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [title]); // Trigger on title change\n\n  const timeSlice = date.substring(11, 16);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eventsArrayDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef // Attach ref to the textarea\n      ,\n      className: \"eventTitle\",\n      value: title // Bind to the title prop\n      ,\n      onChange: e => handleCheckClick(id, e.target.checked) // Keep the existing onChange logic for checkbox\n      ,\n      style: {\n        resize: \"none\",\n        overflow: \"hidden\"\n      } // Prevent manual resize & hide overflow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventsArrayDivDates\",\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventTime\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timeSlice\",\n        children: timeSlice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"checkbox-container\",\n        type: \"checkbox\",\n        checked: isChecked,\n        size: 24,\n        onChange: e => handleCheckClick(id, e.target.checked),\n        style: {\n          height: 20,\n          width: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Event, \"gSWexK8idHTRtbhGpJOt6TRUPko=\");\n_c = Event;\nexport default Event;\nvar _c;\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Event","id","title","date","isChecked","handleCheckClick","_s","textareaRef","current","style","height","scrollHeight","timeSlice","substring","className","children","ref","value","onChange","e","target","checked","resize","overflow","fileName","_jsxFileName","lineNumber","columnNumber","type","size","width","_c","$RefreshReg$"],"sources":["C:/Users/emuld/OneDrive/Desktop/React/Calendar/frontend/src/components/Event.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nfunction Event({ id, title, date, isChecked, handleCheckClick }) {\r\n  const textareaRef = useRef(null); // Ref for accessing the textarea element\r\n\r\n  // Adjust textarea height based on content\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      // Reset the height to 'auto' before adjusting\r\n      textareaRef.current.style.height = \"auto\";\r\n      // Set the height to scrollHeight to auto-resize\r\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n    }\r\n  }, [title]); // Trigger on title change\r\n\r\n  const timeSlice = date.substring(11, 16);\r\n\r\n  return (\r\n    <div className=\"eventsArrayDiv\">\r\n      <textarea\r\n        ref={textareaRef} // Attach ref to the textarea\r\n        className=\"eventTitle\"\r\n        value={title} // Bind to the title prop\r\n        onChange={(e) => handleCheckClick(id, e.target.checked)} // Keep the existing onChange logic for checkbox\r\n        style={{ resize: \"none\", overflow: \"hidden\" }} // Prevent manual resize & hide overflow\r\n      />\r\n      <div className=\"eventsArrayDivDates\" id={id}></div>\r\n      <div className=\"eventTime\">\r\n        <span className=\"timeSlice\">{timeSlice}</span>\r\n        <input\r\n          className=\"checkbox-container\"\r\n          type=\"checkbox\"\r\n          checked={isChecked}\r\n          size={24}\r\n          onChange={(e) => handleCheckClick(id, e.target.checked)}\r\n          style={{\r\n            height: 20,\r\n            width: 20,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,KAAKA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,IAAI;EAAEC,SAAS;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAMC,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElC;EACAD,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,CAACC,OAAO,EAAE;MACvB;MACAD,WAAW,CAACC,OAAO,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;MACzC;MACAH,WAAW,CAACC,OAAO,CAACC,KAAK,CAACC,MAAM,GAAG,GAAGH,WAAW,CAACC,OAAO,CAACG,YAAY,IAAI;IAC5E;EACF,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMU,SAAS,GAAGT,IAAI,CAACU,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC;EAExC,oBACEd,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MACEiB,GAAG,EAAET,WAAY,CAAC;MAAA;MAClBO,SAAS,EAAC,YAAY;MACtBG,KAAK,EAAEf,KAAM,CAAC;MAAA;MACdgB,QAAQ,EAAGC,CAAC,IAAKd,gBAAgB,CAACJ,EAAE,EAAEkB,CAAC,CAACC,MAAM,CAACC,OAAO,CAAE,CAAC;MAAA;MACzDZ,KAAK,EAAE;QAAEa,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF5B,OAAA;MAAKe,SAAS,EAAC,qBAAqB;MAACb,EAAE,EAAEA;IAAG;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnD5B,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBhB,OAAA;QAAMe,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEH;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9C5B,OAAA;QACEe,SAAS,EAAC,oBAAoB;QAC9Bc,IAAI,EAAC,UAAU;QACfP,OAAO,EAAEjB,SAAU;QACnByB,IAAI,EAAE,EAAG;QACTX,QAAQ,EAAGC,CAAC,IAAKd,gBAAgB,CAACJ,EAAE,EAAEkB,CAAC,CAACC,MAAM,CAACC,OAAO,CAAE;QACxDZ,KAAK,EAAE;UACLC,MAAM,EAAE,EAAE;UACVoB,KAAK,EAAE;QACT;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAzCQN,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AA2Cd,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}